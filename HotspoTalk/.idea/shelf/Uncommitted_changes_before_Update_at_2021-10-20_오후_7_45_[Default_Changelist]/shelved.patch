Index: data/src/main/java/com/example/data/datasource/AccountDataSource.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.data.datasource\r\n\r\nimport com.example.data.base.BaseDataSource\r\nimport com.example.data.service.AccountService\r\nimport com.example.domain.entity.repuest.Ban\r\nimport com.example.domain.entity.repuest.Login\r\nimport javax.inject.Inject\r\n\r\nclass AccountDataSource @Inject constructor(\r\n    override val service: AccountService\r\n) : BaseDataSource<AccountService>() {\r\n\r\n    suspend fun postLogin(login: Login): String {\r\n        return getResponse(service.postLogin(login))\r\n    }\r\n\r\n    suspend fun postSignUp(signUp: Login): String {\r\n        return getResponse(service.postSignUp(signUp))\r\n    }\r\n\r\n    suspend fun getId(id: String): String {\r\n        return getResponse(service.getId(id))\r\n    }\r\n\r\n    suspend fun deleteBan(ban: Ban): String {\r\n        return getResponse(service.deleteBan(ban))\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/src/main/java/com/example/data/datasource/AccountDataSource.kt b/data/src/main/java/com/example/data/datasource/AccountDataSource.kt
--- a/data/src/main/java/com/example/data/datasource/AccountDataSource.kt	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/data/src/main/java/com/example/data/datasource/AccountDataSource.kt	(date 1634721350629)
@@ -4,6 +4,7 @@
 import com.example.data.service.AccountService
 import com.example.domain.entity.repuest.Ban
 import com.example.domain.entity.repuest.Login
+import com.example.domain.entity.response.Token
 import javax.inject.Inject
 
 class AccountDataSource @Inject constructor(
@@ -14,7 +15,7 @@
         return getResponse(service.postLogin(login))
     }
 
-    suspend fun postSignUp(signUp: Login): String {
+    suspend fun postSignUp(signUp: Login): Token {
         return getResponse(service.postSignUp(signUp))
     }
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.275\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable/btn_radio_background.xml\" value=\"0.275\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable/ic_baseline_close_24.xml\" value=\"0.275\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable/ic_baseline_send_24.xml\" value=\"0.20520833333333333\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable/main_btn_selector.xml\" value=\"0.275\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable/rounded_corner_rectangle.xml\" value=\"0.275\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/drawable/tab_indicator.xml\" value=\"0.21510416666666668\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/chatting_fragment.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_chatting.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_create_room.xml\" value=\"0.22552083333333334\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home_join_chatting.xml\" value=\"0.3541666666666667\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home_rv_item_chatting_room.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home_vp_item.xml\" value=\"0.152\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/rv_item_chatting_room.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/view_pager_item_home.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/vp_item_chat.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"app/src/main/res/layout/activity_main.xml\" value=\"0.2125\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"app/src/main/res/layout/fragment_create_room.xml\" value=\"0.335\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home.xml\" value=\"0.1953125\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_home_vp_item.xml\" value=\"0.1953125\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_login.xml\" value=\"0.1953125\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_splash.xml\" value=\"0.1953125\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/.idea/misc.xml	(date 1634717402833)
@@ -18,6 +18,8 @@
         <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home_join_chatting.xml" value="0.3541666666666667" />
         <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home_rv_item_chatting_room.xml" value="0.536" />
         <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_home_vp_item.xml" value="0.152" />
+        <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/fragment_sign_up.xml" value="0.18020833333333333" />
+        <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/layout_rv_item_user.xml" value="0.16259057971014493" />
         <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/rv_item_chatting_room.xml" value="0.264" />
         <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/view_pager_item_home.xml" value="0.4" />
         <entry key="..\:/Github/HotspoTalk/HotspoTalk/HotspoTalk/app/src/main/res/layout/vp_item_chat.xml" value="0.25885416666666666" />
Index: data/src/main/java/com/example/data/repository/AccountRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.data.repository\r\n\r\nimport com.example.data.datasource.AccountDataSource\r\nimport com.example.domain.entity.repuest.Ban\r\nimport com.example.domain.entity.repuest.Login\r\nimport com.example.domain.repository.AccountRepository\r\nimport javax.inject.Inject\r\nimport kotlin.math.log\r\n\r\nclass AccountRepositoryImpl @Inject constructor(\r\n    private val dataSource: AccountDataSource\r\n) : AccountRepository {\r\n\r\n    override suspend fun postLogin(login: Login): String {\r\n        return dataSource.postLogin(login)\r\n    }\r\n\r\n    override suspend fun postSignUp(signUp: Login): String {\r\n        return dataSource.postSignUp(signUp)\r\n    }\r\n\r\n    override suspend fun getId(id: String): String {\r\n        return dataSource.getId(id)\r\n    }\r\n\r\n    override suspend fun deleteBan(ban: Ban): String {\r\n        return dataSource.deleteBan(ban)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/src/main/java/com/example/data/repository/AccountRepositoryImpl.kt b/data/src/main/java/com/example/data/repository/AccountRepositoryImpl.kt
--- a/data/src/main/java/com/example/data/repository/AccountRepositoryImpl.kt	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/data/src/main/java/com/example/data/repository/AccountRepositoryImpl.kt	(date 1634721350729)
@@ -3,6 +3,7 @@
 import com.example.data.datasource.AccountDataSource
 import com.example.domain.entity.repuest.Ban
 import com.example.domain.entity.repuest.Login
+import com.example.domain.entity.response.Token
 import com.example.domain.repository.AccountRepository
 import javax.inject.Inject
 import kotlin.math.log
@@ -15,7 +16,7 @@
         return dataSource.postLogin(login)
     }
 
-    override suspend fun postSignUp(signUp: Login): String {
+    override suspend fun postSignUp(signUp: Login): Token {
         return dataSource.postSignUp(signUp)
     }
 
Index: domain/src/main/java/com/example/domain/repository/AccountRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.domain.repository\r\n\r\nimport com.example.domain.entity.repuest.Ban\r\nimport com.example.domain.entity.repuest.Login\r\n\r\ninterface AccountRepository {\r\n    suspend fun postLogin(login: Login): String\r\n\r\n    suspend fun postSignUp(signUp: Login): String\r\n\r\n    suspend fun getId(id: String): String\r\n\r\n    suspend fun deleteBan(ban: Ban): String\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/domain/src/main/java/com/example/domain/repository/AccountRepository.kt b/domain/src/main/java/com/example/domain/repository/AccountRepository.kt
--- a/domain/src/main/java/com/example/domain/repository/AccountRepository.kt	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/domain/src/main/java/com/example/domain/repository/AccountRepository.kt	(date 1634721350748)
@@ -2,11 +2,12 @@
 
 import com.example.domain.entity.repuest.Ban
 import com.example.domain.entity.repuest.Login
+import com.example.domain.entity.response.Token
 
 interface AccountRepository {
     suspend fun postLogin(login: Login): String
 
-    suspend fun postSignUp(signUp: Login): String
+    suspend fun postSignUp(signUp: Login): Token
 
     suspend fun getId(id: String): String
 
Index: app/src/main/java/com/example/hotspotalk/view/fragment/SignUpFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.hotspotalk.view.fragment\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport com.example.hotspotalk.R\r\n\r\n/**\r\n * 회원가입 프래그먼트\r\n */\r\n\r\nclass SignUpFragment : Fragment() {\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_sign_up, container, false)\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hotspotalk/view/fragment/SignUpFragment.kt b/app/src/main/java/com/example/hotspotalk/view/fragment/SignUpFragment.kt
--- a/app/src/main/java/com/example/hotspotalk/view/fragment/SignUpFragment.kt	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/app/src/main/java/com/example/hotspotalk/view/fragment/SignUpFragment.kt	(date 1634726750146)
@@ -5,20 +5,64 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.Toast
+import androidx.databinding.DataBindingUtil
+import androidx.fragment.app.activityViewModels
+import androidx.navigation.fragment.findNavController
+import com.example.domain.usecase.account.PostSignUpUseCase
 import com.example.hotspotalk.R
+import com.example.hotspotalk.databinding.FragmentSignUpBinding
+import com.example.hotspotalk.viewmodel.SignUpViewModel
+import com.example.hotspotalk.viewmodel.factory.SignUpViewModelFactory
+import dagger.hilt.android.AndroidEntryPoint
+import javax.inject.Inject
 
 /**
  * 회원가입 프래그먼트
  */
 
+@AndroidEntryPoint
 class SignUpFragment : Fragment() {
 
+    @Inject
+    lateinit var postSignUpUseCase: PostSignUpUseCase
+
+    private val navController by lazy {
+        findNavController()
+    }
+
+    private lateinit var binding: FragmentSignUpBinding
+    private val viewModel: SignUpViewModel by activityViewModels {
+        SignUpViewModelFactory(postSignUpUseCase)
+    }
+
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_sign_up, container, false)
+        binding = DataBindingUtil.inflate(inflater, R.layout.fragment_sign_up, container, false)
+        binding.vm = viewModel
+        binding.lifecycleOwner = viewLifecycleOwner
+        return binding.root
     }
 
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+
+        observe()
+    }
+
+    private fun observe() = with(viewModel) {
+        isSuccess.observe(viewLifecycleOwner) {
+            navigateToHome()
+        }
+
+        isFailure.observe(viewLifecycleOwner) {
+            Toast.makeText(requireContext(), it, Toast.LENGTH_SHORT).show()
+        }
+    }
+
+    private fun navigateToHome() {
+        navController.navigate(R.id.action_signUpFragment_to_homeFragment)
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/fragment_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".view.fragment.SignUpFragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"@string/hello_blank_fragment\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_sign_up.xml b/app/src/main/res/layout/fragment_sign_up.xml
--- a/app/src/main/res/layout/fragment_sign_up.xml	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/app/src/main/res/layout/fragment_sign_up.xml	(date 1634720906212)
@@ -1,14 +1,118 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".view.fragment.SignUpFragment">
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <data>
+        <variable
+            name="vm"
+            type="com.example.hotspotalk.viewmodel.SignUpViewModel" />
+    </data>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:paddingStart="@dimen/padding_start_sign"
+        android:paddingEnd="@dimen/padding_start_sign"
+        android:paddingTop="@dimen/padding_top_sign"
+        android:paddingBottom="@dimen/padding_top_sign"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:context=".view.fragment.SignUpFragment">
 
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="@string/hello_blank_fragment" />
+        <TextView
+            android:id="@+id/textView3"
+            style="@style/TitleTextView"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/sign_up"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/textInputLayout"
+            style="@style/MainTextInputLayout"
+            android:layout_marginTop="32dp"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:layout_constraintStart_toStartOf="@+id/textView3"
+            app:layout_constraintTop_toBottomOf="@+id/textView3">
+
+            <com.google.android.material.textfield.TextInputEditText
+                style="@style/MainTextInputEditText"
+                android:text="@={vm.id}"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="@string/id" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/textInputLayout2"
+            style="@style/MainTextInputLayout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="@+id/textInputLayout"
+            app:layout_constraintStart_toStartOf="@+id/textInputLayout"
+            app:layout_constraintTop_toBottomOf="@+id/textInputLayout">
+
+            <com.google.android.material.textfield.TextInputEditText
+                style="@style/MainTextInputEditText"
+                android:text="@={vm.pw}"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="@string/password" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/textInputLayout3"
+            style="@style/MainTextInputLayout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="@+id/textInputLayout2"
+            app:layout_constraintStart_toStartOf="@+id/textInputLayout2"
+            app:layout_constraintTop_toBottomOf="@+id/textInputLayout2">
 
-</FrameLayout>
\ No newline at end of file
+            <com.google.android.material.textfield.TextInputEditText
+                style="@style/MainTextInputEditText"
+                android:text="@={vm.pwCheck}"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="@string/password_check" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/button"
+            android:onClick="@{() -> vm.signUp()}"
+            style="@style/Widget.AppCompat.Button.MainButton"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_top_sign_btn"
+            android:text="@string/sign_up"
+            app:layout_constraintEnd_toEndOf="@+id/textInputLayout3"
+            app:layout_constraintStart_toStartOf="@+id/textInputLayout3"
+            app:layout_constraintTop_toBottomOf="@+id/textInputLayout3" />
+
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:gravity="center"
+            android:orientation="horizontal"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent">
+
+            <TextView
+                android:id="@+id/textView5"
+                style="@style/Base.Widget.AppCompat.TextView.RegularTextView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="이미 회원이신가요?" />
+
+            <TextView
+                android:id="@+id/textView4"
+                style="@style/Base.Widget.AppCompat.TextView.RegularTextView"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="20dp"
+                android:text="로그인하기" />
+        </LinearLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".view.fragment.LoginFragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"@string/hello_blank_fragment\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_login.xml b/app/src/main/res/layout/fragment_login.xml
--- a/app/src/main/res/layout/fragment_login.xml	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/app/src/main/res/layout/fragment_login.xml	(date 1634721061441)
@@ -1,14 +1,100 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<layout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".view.fragment.LoginFragment">
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <data>
+        <variable
+            name="vm"
+            type="com.example.hotspotalk.viewmodel.SignInViewModel" />
+    </data>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:paddingTop="@dimen/padding_top_sign"
+        android:paddingBottom="@dimen/padding_top_sign"
+        android:paddingStart="@dimen/padding_start_sign"
+        android:paddingEnd="@dimen/padding_start_sign"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:context=".view.fragment.LoginFragment">
 
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="@string/hello_blank_fragment" />
+        <TextView
+            android:id="@+id/textView7"
+            style="@style/TitleTextView"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/sign_in"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/textInputLayout4"
+            style="@style/MainTextInputLayout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginEnd="2dp"
+            android:layout_marginTop="32dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/textView7">
+
+            <com.google.android.material.textfield.TextInputEditText
+                style="@style/MainTextInputEditText"
+                android:text="@{vm.id}"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="@string/id" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/textInputLayout5"
+            style="@style/MainTextInputLayout"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            app:layout_constraintEnd_toEndOf="@+id/textInputLayout4"
+            app:layout_constraintStart_toStartOf="@+id/textInputLayout4"
+            app:layout_constraintTop_toBottomOf="@+id/textInputLayout4">
+
+            <com.google.android.material.textfield.TextInputEditText
+                style="@style/MainTextInputEditText"
+                android:text="@{vm.pw}"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:hint="@string/password" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <androidx.appcompat.widget.AppCompatButton
+            android:id="@+id/button2"
+            style="@style/Widget.AppCompat.Button.MainButton"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/margin_top_sign_btn"
+            android:text="@string/sign_up"
+            app:layout_constraintEnd_toEndOf="@+id/textInputLayout5"
+            app:layout_constraintStart_toStartOf="@+id/textInputLayout5"
+            app:layout_constraintTop_toBottomOf="@+id/textInputLayout5" />
+
+        <LinearLayout
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:gravity="center"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent">
 
-</FrameLayout>
\ No newline at end of file
+            <TextView
+                android:id="@+id/textView9"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="TextView" />
+
+            <TextView
+                android:id="@+id/textView10"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="TextView" />
+        </LinearLayout>
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</layout>
\ No newline at end of file
Index: data/src/main/java/com/example/data/mapper/TokenMapper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/src/main/java/com/example/data/mapper/TokenMapper.kt b/data/src/main/java/com/example/data/mapper/TokenMapper.kt
new file mode 100644
--- /dev/null	(date 1634725839614)
+++ b/data/src/main/java/com/example/data/mapper/TokenMapper.kt	(date 1634725839614)
@@ -0,0 +1,10 @@
+package com.example.data.mapper
+
+import com.example.data.entity.TokenData
+import com.example.domain.entity.response.Token
+
+fun Token.toData() =
+    TokenData(this.token)
+
+fun TokenData.toEntity() =
+    Token(this.token)
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/dimens.xml b/app/src/main/res/values/dimens.xml
new file mode 100644
--- /dev/null	(date 1634720906236)
+++ b/app/src/main/res/values/dimens.xml	(date 1634720906236)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="padding_start_sign">30dp</dimen>
+    <dimen name="padding_top_sign">60dp</dimen>
+    <dimen name="margin_top_sign_btn">60dp</dimen>
+</resources>
\ No newline at end of file
Index: data/src/main/java/com/example/data/entity/TokenData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/src/main/java/com/example/data/entity/TokenData.kt b/data/src/main/java/com/example/data/entity/TokenData.kt
new file mode 100644
--- /dev/null	(date 1634725839597)
+++ b/data/src/main/java/com/example/data/entity/TokenData.kt	(date 1634725839597)
@@ -0,0 +1,5 @@
+package com.example.data.entity
+
+data class TokenData(
+    val token: String?
+)
Index: data/src/main/java/com/example/data/service/AccountService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.data.service\r\n\r\nimport com.example.domain.entity.repuest.Ban\r\nimport com.example.domain.entity.repuest.Login\r\nimport com.example.domain.entity.response.Token\r\nimport retrofit2.Response\r\nimport retrofit2.http.Body\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.POST\r\nimport retrofit2.http.Path\r\n\r\ninterface AccountService {\r\n    @POST(\"account/login\")\r\n    suspend fun postLogin(@Body login: Login): Response<String>\r\n\r\n    @POST(\"account/signUp\")\r\n    suspend fun postSignUp(@Body login: Login): Response<String>\r\n\r\n    @GET(\"account/{id}\")\r\n    suspend fun getId(@Path(\"id\") id: String): Response<String>\r\n\r\n    @GET(\"/account/ban\")\r\n    suspend fun deleteBan(@Body ban: Ban): Response<String>\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/src/main/java/com/example/data/service/AccountService.kt b/data/src/main/java/com/example/data/service/AccountService.kt
--- a/data/src/main/java/com/example/data/service/AccountService.kt	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/data/src/main/java/com/example/data/service/AccountService.kt	(date 1634721350644)
@@ -14,7 +14,7 @@
     suspend fun postLogin(@Body login: Login): Response<String>
 
     @POST("account/signUp")
-    suspend fun postSignUp(@Body login: Login): Response<String>
+    suspend fun postSignUp(@Body login: Login): Response<Token>
 
     @GET("account/{id}")
     suspend fun getId(@Path("id") id: String): Response<String>
Index: domain/src/main/java/com/example/domain/usecase/account/PostSignUpUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.domain.usecase.account\r\n\r\nimport com.example.domain.base.ParamsUseCase\r\nimport com.example.domain.entity.repuest.Login\r\nimport com.example.domain.repository.AccountRepository\r\nimport java.util.function.LongToIntFunction\r\nimport javax.inject.Inject\r\n\r\nclass PostSignUpUseCase @Inject constructor(\r\n    private val accountRepository: AccountRepository\r\n) : ParamsUseCase<PostSignUpUseCase.Params, String>() {\r\n\r\n    override suspend fun buildUseCase(params: Params): String {\r\n        return accountRepository.postSignUp(params.signUp)\r\n    }\r\n\r\n    data class Params(\r\n        val signUp: Login\r\n    )\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/domain/src/main/java/com/example/domain/usecase/account/PostSignUpUseCase.kt b/domain/src/main/java/com/example/domain/usecase/account/PostSignUpUseCase.kt
--- a/domain/src/main/java/com/example/domain/usecase/account/PostSignUpUseCase.kt	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/domain/src/main/java/com/example/domain/usecase/account/PostSignUpUseCase.kt	(date 1634721232144)
@@ -2,15 +2,16 @@
 
 import com.example.domain.base.ParamsUseCase
 import com.example.domain.entity.repuest.Login
+import com.example.domain.entity.response.Token
 import com.example.domain.repository.AccountRepository
 import java.util.function.LongToIntFunction
 import javax.inject.Inject
 
 class PostSignUpUseCase @Inject constructor(
     private val accountRepository: AccountRepository
-) : ParamsUseCase<PostSignUpUseCase.Params, String>() {
+) : ParamsUseCase<PostSignUpUseCase.Params, Token>() {
 
-    override suspend fun buildUseCase(params: Params): String {
+    override suspend fun buildUseCase(params: Params): Token {
         return accountRepository.postSignUp(params.signUp)
     }
 
Index: app/src/main/java/com/example/hotspotalk/viewmodel/SignUpViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hotspotalk/viewmodel/SignUpViewModel.kt b/app/src/main/java/com/example/hotspotalk/viewmodel/SignUpViewModel.kt
new file mode 100644
--- /dev/null	(date 1634726620572)
+++ b/app/src/main/java/com/example/hotspotalk/viewmodel/SignUpViewModel.kt	(date 1634726620572)
@@ -0,0 +1,42 @@
+package com.example.hotspotalk.viewmodel
+
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.example.domain.entity.repuest.Login
+import com.example.domain.entity.response.Token
+import com.example.domain.usecase.account.PostSignUpUseCase
+import kotlinx.coroutines.launch
+
+class SignUpViewModel(
+    private val postSignUpUseCase: PostSignUpUseCase
+) : ViewModel() {
+
+    val id = MutableLiveData("")
+    val pw = MutableLiveData("")
+    val pwCheck = MutableLiveData("")
+
+    private val _isSuccess = MutableLiveData<Token>()
+    val isSuccess = _isSuccess
+
+    private val _isFailure = MutableLiveData<String>()
+    val isFailure = _isFailure
+
+    // todo deviceToken
+    val devToken = ""
+
+    fun signUp() {
+        viewModelScope.launch {
+            if (pw.value != pwCheck.value) {
+                return@launch
+            }
+
+            val signUp = Login(id.value!!, pw.value!!, devToken)
+            try {
+                _isSuccess.postValue(postSignUpUseCase.buildUseCase(PostSignUpUseCase.Params(signUp)))
+            } catch (e: Exception) {
+                isFailure.postValue(e.message)
+            }
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">HotspoTalk</string>\r\n    <!-- TODO: Remove or change this placeholder text -->\r\n    <string name=\"hello_blank_fragment\">Hello blank fragment</string>\r\n    <string name=\"chatting_room_name\">채팅방명</string>\r\n    <string name=\"total_people_number\">총 인원</string>\r\n    <string name=\"password\">비밀번호</string>\r\n    <string name=\"chatting\">채팅</string>\r\n    <string name=\"create_room\">방 만들기</string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/app/src/main/res/values/strings.xml	(date 1634720755403)
@@ -7,4 +7,8 @@
     <string name="password">비밀번호</string>
     <string name="chatting">채팅</string>
     <string name="create_room">방 만들기</string>
+    <string name="sign_up">회원가입</string>
+    <string name="id">아이디</string>
+    <string name="password_check">비밀번호 확인</string>
+    <string name="sign_in">로그인</string>
 </resources>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <!-- Base application theme. -->\r\n    <style name=\"Theme.HotspoTalk\" parent=\"Theme.MaterialComponents.DayNight.NoActionBar\">\r\n        <!-- Primary brand color. -->\r\n        <item name=\"colorPrimary\">@color/purple_500</item>\r\n        <item name=\"colorPrimaryVariant\">@color/purple_700</item>\r\n        <item name=\"colorOnPrimary\">@color/white</item>\r\n        <!-- Secondary brand color. -->\r\n        <item name=\"colorSecondary\">@color/teal_200</item>\r\n        <item name=\"colorSecondaryVariant\">@color/teal_700</item>\r\n        <item name=\"colorOnSecondary\">@color/black</item>\r\n        <!-- Status bar color. -->\r\n        <item name=\"android:statusBarColor\" tools:targetApi=\"l\">?attr/colorPrimaryVariant</item>\r\n        <!-- Customize your theme here. -->\r\n    </style>\r\n\r\n    <!-- Button -->\r\n    <style name=\"Widget.AppCompat.Button.MainButton\">\r\n        <item name=\"android:background\">@drawable/main_btn_selector</item>\r\n        <item name=\"android:textColor\">@color/white</item>\r\n        <item name=\"elevation\">5dp</item>\r\n        <item name=\"android:translationZ\" tools:targetApi=\"lollipop\">10dp</item>\r\n    </style>\r\n\r\n    <!-- TextView -->\r\n    <style name=\"Base.Widget.AppCompat.TextView.BigTextView\">\r\n        <item name=\"android:textColor\">@color/black</item>\r\n        <item name=\"android:textSize\">20sp</item>\r\n    </style>\r\n\r\n    <style name=\"Base.Widget.AppCompat.TextView.SmallTextView\">\r\n        <item name=\"android:textColor\">@color/black</item>\r\n        <item name=\"android:textSize\">15sp</item>\r\n    </style>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
--- a/app/src/main/res/values/themes.xml	(revision a3e7bec19a6642fc779ffa944a1b61ed62b8f209)
+++ b/app/src/main/res/values/themes.xml	(date 1634720496565)
@@ -23,13 +23,46 @@
     </style>
 
     <!-- TextView -->
+    <style name="TitleTextView" parent="Widget.AppCompat.TextView">
+        <item name="android:textColor">@color/black</item>
+        <item name="android:textSize">30sp</item>
+        <item name="android:textStyle">bold</item>
+    </style>
+
     <style name="Base.Widget.AppCompat.TextView.BigTextView">
         <item name="android:textColor">@color/black</item>
         <item name="android:textSize">20sp</item>
     </style>
+
+    <style name="Base.Widget.AppCompat.TextView.RegularTextView">
+        <item name="android:textColor">@color/black</item>
+        <item name="android:textSize">18sp</item>
+    </style>
 
     <style name="Base.Widget.AppCompat.TextView.SmallTextView">
         <item name="android:textColor">@color/black</item>
         <item name="android:textSize">15sp</item>
     </style>
+
+    <!-- TextInputLayout -->
+    <style name="MainTextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
+        <item name="hintEnabled">false</item>
+        <item name="errorEnabled">true</item>
+        <item name="android:layout_marginTop">5dp</item>
+        <item name="boxCornerRadiusBottomEnd">40dp</item>
+        <item name="boxCornerRadiusBottomStart">40dp</item>
+        <item name="boxCornerRadiusTopEnd">40dp</item>
+        <item name="boxCornerRadiusTopStart">40dp</item>
+    </style>
+
+    <!-- EditText -->
+    <style name="MainTextInputEditText" parent="Widget.AppCompat.EditText">
+        <item name="maxLines">1</item>
+        <item name="singleLine">true</item>
+        <item name="android:textColor">@color/black</item>
+        <item name="android:textSize">15sp</item>
+        <item name="android:includeFontPadding">true</item>
+        <item name="android:paddingStart">24dp</item>
+        <item name="android:paddingEnd">24dp</item>
+    </style>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/hotspotalk/viewmodel/factory/SignUpViewModelFactory.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hotspotalk/viewmodel/factory/SignUpViewModelFactory.kt b/app/src/main/java/com/example/hotspotalk/viewmodel/factory/SignUpViewModelFactory.kt
new file mode 100644
--- /dev/null	(date 1634718095431)
+++ b/app/src/main/java/com/example/hotspotalk/viewmodel/factory/SignUpViewModelFactory.kt	(date 1634718095431)
@@ -0,0 +1,17 @@
+package com.example.hotspotalk.viewmodel.factory
+
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.ViewModelProvider
+import com.example.domain.usecase.account.PostSignUpUseCase
+import com.example.hotspotalk.viewmodel.SignUpViewModel
+
+class SignUpViewModelFactory(
+    val postSignUpUseCase: PostSignUpUseCase
+) : ViewModelProvider.Factory {
+    override fun <T : ViewModel?> create(modelClass: Class<T>): T {
+        if (modelClass.isAssignableFrom(SignUpViewModel::class.java)) {
+            return SignUpViewModel() as T
+        }
+        throw IllegalAccessException()
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/hotspotalk/viewmodel/SignInViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/hotspotalk/viewmodel/SignInViewModel.kt b/app/src/main/java/com/example/hotspotalk/viewmodel/SignInViewModel.kt
new file mode 100644
--- /dev/null	(date 1634720988023)
+++ b/app/src/main/java/com/example/hotspotalk/viewmodel/SignInViewModel.kt	(date 1634720988023)
@@ -0,0 +1,24 @@
+package com.example.hotspotalk.viewmodel
+
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.example.domain.entity.response.Token
+import com.example.domain.usecase.account.PostSignUpUseCase
+import kotlinx.coroutines.launch
+
+class SignInViewModel(
+    private val postSignInUseCase: PostSignUpUseCase
+) : ViewModel() {
+
+    val id = MutableLiveData("")
+    val pw = MutableLiveData("")
+
+    val postSignInRes = MutableLiveData<Token>()
+
+    fun signIn() {
+        viewModelScope.launch {
+
+        }
+    }
+}
\ No newline at end of file
